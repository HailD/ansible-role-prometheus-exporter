---
- name: "install | Create group"
  ansible.builtin.group:
    name: "{{ prometheus_proxy_group }}"
    state: "present"
    system: true

- name: "install | Create user"
  ansible.builtin.user:
    name: "{{ prometheus_proxy_user }}"
    group: "{{ prometheus_proxy_group }}"
    shell: "/usr/sbin/nologin"
    system: true
    create_home: false

- name: "install | Download binary"
  when: >
    not _prometheus_proxy_is_installed
    or prometheus_proxy_version != _prometheus_proxy_installed_version
  block:
    - name: "install | Create temporary directory"
      ansible.builtin.tempfile:
        state: "directory"
      register: "_temp_dir"

    - name: "install | Unpack exporter_exporter binary"
      ansible.builtin.unarchive:
        remote_src: true
        src: "https://github.com/QubitProducts/exporter_exporter/releases/download/\
          v{{ prometheus_proxy_version }}/exporter_exporter-{{ prometheus_proxy_version }}.linux-amd64.tar.gz"
        dest: "{{ _temp_dir.path }}"
        creates: "{{ _temp_dir.path }}/exporter_exporter-{{ prometheus_proxy_version }}.linux-amd64/exporter_exporter"

    - name: "install | Move exporter_exporter binary"
      ansible.builtin.copy:
        remote_src: true
        src: "{{ _temp_dir.path }}/exporter_exporter-{{ prometheus_proxy_version }}.linux-amd64/exporter_exporter"
        dest: "/usr/local/bin/exporter_exporter"
        mode: "0755"
        owner: "root"
        group: "root"
      notify: "Restart service"

- name: "install | Template the systemd service"
  ansible.builtin.template:
    src: "prometheus-proxy.service.j2"
    dest: "/etc/systemd/system/prometheus-proxy.service"
    owner: "root"
    group: "root"
    mode: "0644"
  notify: "Restart service"

- name: "install | Template prometheus proxy configuration"
  ansible.builtin.template:
    src: "templates/prometheus-proxy.yaml.j2"
    dest: "/etc/expexp.yaml"
    owner: "root"
    group: "{{ prometheus_proxy_user }}"
    mode: "0640"
  notify: "Restart service"
